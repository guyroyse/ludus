<project name="Ludus Mundi" default="help">
    <property file="build.properties" />
    <property name="project.name" value="ludus" />
    <property name="project.gems" value="${project.name}-gems" />
    <property name="project.src" value="src" />
    <property name="project.lib" value="lib" />
    <property name="web.inf" value="war/WEB-INF" />
    <property name="web.inf.lib" value="${web.inf}/lib" />
    <property name="web.inf.classes" value="${web.inf}/classes" />
    <property name="project.gems.jar" value="${web.inf.lib}/${project.gems}.jar" />
    <import file="${appengine.home}/config/user/ant-macros.xml" />
    <path id="project.classpath">
        <pathelement path="${web.inf.classes}" />
        <fileset dir="${web.inf.lib}">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${appengine.home}/lib">
            <include name="shared/**/*.jar" />
        </fileset>
    </path>
    <target name="help">
        <echo>usage: ant &lt;subcommand&gt;</echo>
        <echo/>
        <echo>Available subcommands:</echo>
        <echo/>
        <echo>  build       does a clean and compile</echo>
        <echo>  build-all   does a clean-all and compile</echo> 
        <echo>  clean       removes compiled code</echo>
        <echo>  clean-all   removes compiled code and dependencies</echo>
        <echo>  install     install or reinstall dependencies</echo>
        <echo>  compile     builds the target</echo>
        <echo>  run         runs the application</echo>
    </target>
    <target name="build" depends="clean,compile" />
    <target name="build-all" depends="clean,install,compile" />
    <target name="clean" depends="clean-classes" />
    <target name="clean-all" depends="clean-dependencies,clean-classes" />
    <target name="clean-classes">
        <echo>./war/WEB-INF/classes</echo>
        <delete includeemptydirs="true">
            <fileset dir="${web.inf.classes}" includes="**/*" />
        </delete>
    </target>
    <target name="clean-dependencies">
        <echo>./ludus-gems</echo>
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${project.gems}" includes="**/*" />
        </delete>
        <echo>./war/WEB-INF/lib</echo>
        <delete includeemptydirs="true">
            <fileset dir="${web.inf.lib}" includes="**/*" />
        </delete>
    </target>
    <target name="install" depends="clean-dependencies,install-dependent-jars,install-dependent-gems" />
    <target name="install-dependent-jars" depends="create-web-inf-lib">
        <echo>Installing JRuby JARs...</echo>
        <copy todir="${web.inf.lib}">
            <filelist dir="${project.lib}">
                <file name="jruby-core-1.5.6.jar" />
                <file name="jruby-stdlib-1.5.6.jar" />
                <file name="jruby-rack-1.0.6.jar" />
            </filelist>
        </copy>
        <echo>Installing GAE JARs...</echo>
        <copy todir="${web.inf.lib}" flatten="true">
            <fileset dir="${appengine.home}/lib/user">
                <include name="**/*.jar" />
            </fileset>
        </copy>
    </target>
    <target name="install-dependent-gems" depends="create-web-inf-lib">
        <echo>JARing and Installing GEMS...</echo>
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${project.gems}" includes="**/*" />
        </delete>
        <exec executable="gem" failonerror="true" resolveexecutable="true">
            <arg line="install sinatra -v '= 1.1.3' -i ${project.gems} --no-rdoc --no-ri --ignore-dependencies" />
        </exec>
        <exec executable="gem" failonerror="true" resolveexecutable="true">
            <arg line="install rack -v '= 1.2.1' -i ${project.gems} --no-rdoc --no-ri --ignore-dependencies" />
        </exec>
        <exec executable="gem" failonerror="true" resolveexecutable="true">
            <arg line="install tilt -v '= 1.2.2' -i ${project.gems} --no-rdoc --no-ri --ignore-dependencies" />
        </exec>
        <jar destfile="${project.gems.jar}" basedir="${project.gems}" />
    </target>
    <target name="create-web-inf-lib">
        <mkdir dir="${web.inf.lib}" />
    </target>
    <target name="compile" depends="create-web-inf-classes">
        <copy todir="${web.inf.classes}">
            <fileset dir="${project.src}">
                <include name="**/*" />
            </fileset>
        </copy>
    </target>
    <target name="create-web-inf-classes">
        <mkdir dir="${web.inf.classes}" />
    </target>
    <target name="run">
        <dev_appserver war="war" port="8888" address="0.0.0.0" />
    </target>
</project>